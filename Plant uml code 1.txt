@startuml Movie Ticket Booking System

' Style and theme configurations
skinparam backgroundColor white
skinparam class {
    BackgroundColor white
    ArrowColor Black
    BorderColor Black
    FontColor Black
}

skinparam classAttributeIconSize 0
skinparam linetype ortho
skinparam packageStyle rectangle

' Layout direction
left to right direction

package "File Io Methods" {
    class FileManager {
        + Start()
        + Save()
        + saveCustomers()
        + loadCustomers()
        + saveMovies()
        + loadMovies()
        + saveTheatres()
        + loadTheatres()
    }
}

package "Core Classes" {
    class Person {
        # name: string
        # age: int
        # email: string
        + Set_name(string)
        + Set_age(int)
        + Set_email(string)
        + get_name(): string
        + get_age(): int
        + get_email(): string
    }

    class Customer {
        - phoneNumber: string
        - CustomerBookings: vector<Ticket>
        - password: string
        + bookShow(Ticket)
        + get_PhoneNumber(): string
        + get_CustomerBookings(): vector<Ticket>
        + match_password(string): bool
        + cancelBooking(int)
    }

    class Admin {
        + add_theatre(string, string, string, int, string, int, int)
        + add_show(string, string, int, int, int, int, int, int, int, string, string, string, string)
        + delete_theatre(string)
        + delete_movie(string)
        + delete_show(string, int, int)
    }
}

package "Booking System" {
    class Booking_Manager {
        + add_NewCustomer()
        + handleExistingCustomer()
        + handleBooking(Customer*)
    }

    class Ticket {
        # seat: Seat
        # theatre: Theatre
        # show: Show
        + set_Show(Show)
        + set_Seat(Seat)
        + set_Theatre(Theatre)
        + get_Seat(): Seat
        + get_Theatre(): Theatre
        + get_Show(): Show
    }
}

package "Theatre Management" {
    class Theatre {
        # name: string
        # location: string
        # city: string
        # capacity: int
        # owner_name: string
        # rows: int
        # columns: int
        # shows_track: vector<Show*>
        + set_Name(string)
        + set_Location(string)
        + set_City(string)
        + set_Capacity(int)
        + set_OwnerName(string)
        + set_Rows(int)
        + set_Columns(int)
        + add_show(Show*)
        + get_Name(): string
        + get_Location(): string
        + get_City(): string
        + get_ShowsTrack(): vector<Show*>
    }

    class Seat {
        - row_number: int
        - seat_number: int
        - isAvailable: bool
        + Set_row_number(int)
        + Set_seat_number(int)
        + Set_isAvailable(bool)
        + get_row_number(): int
        + get_seat_number(): int
        + get_isAvailable(): bool
    }
}

package "Show Details" {
    class Show {
        - movie_name: string
        - movie_start_time: Time
        - movie_end_time: Time
        - movie_date: Date
        - language: string
        - cast: string
        - rating: string
        - movie_overview: string
        + set_MovieName(string)
        + set_MovieStartTime(Time)
        + set_MovieEndTime(Time)
        + set_MovieDate(Date)
        + get_MovieName(): string
        + get_MovieStartTime(): Time
        + get_MovieEndTime(): Time
        + get_MovieDate(): Date
    }

    class Date {
        - date: int
        - month: int
        - year: int
        + Set_date(int)
        + Set_month(int)
        + Set_year(int)
        + get_date(): int
        + get_month(): int
        + get_year(): int
        + compare(Date): int
    }

    class Time {
        - hour: int
        - minute: int
        + Set_hour(int)
        + Set_minute(int)
        + get_hour(): int
        + get_minute(): int
        + compare(Time): int
    }
}

' Relationships
Person <|-- Customer
Person <|-- Admin
Customer "1" -- "1" Ticket : has
Theatre "1" -- "*" Show : contains >
Theatre "1" -- "*" Seat : has >
Show "1" -- "1" Date : has
Show "1" -- "2" Time : has
Ticket "1" -- "1" Show : references >
Ticket "1" -- "1" Theatre : references >
Ticket "1" -- "1" Seat : references >
Booking_Manager -- Customer : manages >

' Global Static Collections
class GlobalCollections {
    + {static} Theatres: vector<Theatre*>
    + {static} Customers: vector<Customer*>
    + {static} Movies: vector<string>
}

@enduml@startuml Movie Ticket Booking System

' Style and theme configurations
skinparam backgroundColor white
skinparam class {
    BackgroundColor white
    ArrowColor Black
    BorderColor Black
    FontColor Black
}

skinparam classAttributeIconSize 0
skinparam linetype ortho
skinparam packageStyle rectangle

' Layout direction
left to right direction

package "File Io Methods" {
    class FileManager {
        + Start()
        + Save()
        + saveCustomers()
        + loadCustomers()
        + saveMovies()
        + loadMovies()
        + saveTheatres()
        + loadTheatres()
    }
}

package "Core Classes" {
    class Person {
        # name: string
        # age: int
        # email: string
        + Set_name(string)
        + Set_age(int)
        + Set_email(string)
        + get_name(): string
        + get_age(): int
        + get_email(): string
    }

    class Customer {
        - phoneNumber: string
        - CustomerBookings: vector<Ticket>
        - password: string
        + bookShow(Ticket)
        + get_PhoneNumber(): string
        + get_CustomerBookings(): vector<Ticket>
        + match_password(string): bool
        + cancelBooking(int)
    }

    class Admin {
        + add_theatre(string, string, string, int, string, int, int)
        + add_show(string, string, int, int, int, int, int, int, int, string, string, string, string)
        + delete_theatre(string)
        + delete_movie(string)
        + delete_show(string, int, int)
    }
}

package "Booking System" {
    class Booking_Manager {
        + add_NewCustomer()
        + handleExistingCustomer()
        + handleBooking(Customer*)
    }

    class Ticket {
        # seat: Seat
        # theatre: Theatre
        # show: Show
        + set_Show(Show)
        + set_Seat(Seat)
        + set_Theatre(Theatre)
        + get_Seat(): Seat
        + get_Theatre(): Theatre
        + get_Show(): Show
    }
}

package "Theatre Management" {
    class Theatre {
        # name: string
        # location: string
        # city: string
        # capacity: int
        # owner_name: string
        # rows: int
        # columns: int
        # shows_track: vector<Show*>
        + set_Name(string)
        + set_Location(string)
        + set_City(string)
        + set_Capacity(int)
        + set_OwnerName(string)
        + set_Rows(int)
        + set_Columns(int)
        + add_show(Show*)
        + get_Name(): string
        + get_Location(): string
        + get_City(): string
        + get_ShowsTrack(): vector<Show*>
    }

    class Seat {
        - row_number: int
        - seat_number: int
        - isAvailable: bool
        + Set_row_number(int)
        + Set_seat_number(int)
        + Set_isAvailable(bool)
        + get_row_number(): int
        + get_seat_number(): int
        + get_isAvailable(): bool
    }
}

package "Show Details" {
    class Show {
        - movie_name: string
        - movie_start_time: Time
        - movie_end_time: Time
        - movie_date: Date
        - language: string
        - cast: string
        - rating: string
        - movie_overview: string
        + set_MovieName(string)
        + set_MovieStartTime(Time)
        + set_MovieEndTime(Time)
        + set_MovieDate(Date)
        + get_MovieName(): string
        + get_MovieStartTime(): Time
        + get_MovieEndTime(): Time
        + get_MovieDate(): Date
    }

    class Date {
        - date: int
        - month: int
        - year: int
        + Set_date(int)
        + Set_month(int)
        + Set_year(int)
        + get_date(): int
        + get_month(): int
        + get_year(): int
        + compare(Date): int
    }

    class Time {
        - hour: int
        - minute: int
        + Set_hour(int)
        + Set_minute(int)
        + get_hour(): int
        + get_minute(): int
        + compare(Time): int
    }
}

' Relationships
Person <|-- Customer
Person <|-- Admin
Customer "1" -- "1" Ticket : has
Theatre "1" -- "*" Show : contains >
Theatre "1" -- "*" Seat : has >
Show "1" -- "1" Date : has
Show "1" -- "2" Time : has
Ticket "1" -- "1" Show : references >
Ticket "1" -- "1" Theatre : references >
Ticket "1" -- "1" Seat : references >
Booking_Manager -- Customer : manages >

' Global Static Collections
class GlobalCollections {
    + {static} Theatres: vector<Theatre*>
    + {static} Customers: vector<Customer*>
    + {static} Movies: vector<string>
}

@enduml@startuml Movie Ticket Booking System

' Style and theme configurations
skinparam backgroundColor white
skinparam class {
    BackgroundColor white
    ArrowColor Black
    BorderColor Black
    FontColor Black
}

skinparam classAttributeIconSize 0
skinparam linetype ortho
skinparam packageStyle rectangle

' Layout direction
left to right direction

package "File Io Methods" {
    class FileManager {
        + Start()
        + Save()
        + saveCustomers()
        + loadCustomers()
        + saveMovies()
        + loadMovies()
        + saveTheatres()
        + loadTheatres()
    }
}

package "Core Classes" {
    class Person {
        # name: string
        # age: int
        # email: string
        + Set_name(string)
        + Set_age(int)
        + Set_email(string)
        + get_name(): string
        + get_age(): int
        + get_email(): string
    }

    class Customer {
        - phoneNumber: string
        - CustomerBookings: vector<Ticket>
        - password: string
        + bookShow(Ticket)
        + get_PhoneNumber(): string
        + get_CustomerBookings(): vector<Ticket>
        + match_password(string): bool
        + cancelBooking(int)
    }

    class Admin {
        + add_theatre(string, string, string, int, string, int, int)
        + add_show(string, string, int, int, int, int, int, int, int, string, string, string, string)
        + delete_theatre(string)
        + delete_movie(string)
        + delete_show(string, int, int)
    }
}

package "Booking System" {
    class Booking_Manager {
        + add_NewCustomer()
        + handleExistingCustomer()
        + handleBooking(Customer*)
    }

    class Ticket {
        # seat: Seat
        # theatre: Theatre
        # show: Show
        + set_Show(Show)
        + set_Seat(Seat)
        + set_Theatre(Theatre)
        + get_Seat(): Seat
        + get_Theatre(): Theatre
        + get_Show(): Show
    }
}

package "Theatre Management" {
    class Theatre {
        # name: string
        # location: string
        # city: string
        # capacity: int
        # owner_name: string
        # rows: int
        # columns: int
        # shows_track: vector<Show*>
        + set_Name(string)
        + set_Location(string)
        + set_City(string)
        + set_Capacity(int)
        + set_OwnerName(string)
        + set_Rows(int)
        + set_Columns(int)
        + add_show(Show*)
        + get_Name(): string
        + get_Location(): string
        + get_City(): string
        + get_ShowsTrack(): vector<Show*>
    }

    class Seat {
        - row_number: int
        - seat_number: int
        - isAvailable: bool
        + Set_row_number(int)
        + Set_seat_number(int)
        + Set_isAvailable(bool)
        + get_row_number(): int
        + get_seat_number(): int
        + get_isAvailable(): bool
    }
}

package "Show Details" {
    class Show {
        - movie_name: string
        - movie_start_time: Time
        - movie_end_time: Time
        - movie_date: Date
        - language: string
        - cast: string
        - rating: string
        - movie_overview: string
        + set_MovieName(string)
        + set_MovieStartTime(Time)
        + set_MovieEndTime(Time)
        + set_MovieDate(Date)
        + get_MovieName(): string
        + get_MovieStartTime(): Time
        + get_MovieEndTime(): Time
        + get_MovieDate(): Date
    }

    class Date {
        - date: int
        - month: int
        - year: int
        + Set_date(int)
        + Set_month(int)
        + Set_year(int)
        + get_date(): int
        + get_month(): int
        + get_year(): int
        + compare(Date): int
    }

    class Time {
        - hour: int
        - minute: int
        + Set_hour(int)
        + Set_minute(int)
        + get_hour(): int
        + get_minute(): int
        + compare(Time): int
    }
}

' Relationships
Person <|-- Customer
Person <|-- Admin
Customer "1" -- "1" Ticket : has
Theatre "1" -- "*" Show : contains >
Theatre "1" -- "*" Seat : has >
Show "1" -- "1" Date : has
Show "1" -- "2" Time : has
Ticket "1" -- "1" Show : references >
Ticket "1" -- "1" Theatre : references >
Ticket "1" -- "1" Seat : references >
Booking_Manager -- Customer : manages >

' Global Static Collections
class GlobalCollections {
    + {static} Theatres: vector<Theatre*>
    + {static} Customers: vector<Customer*>
    + {static} Movies: vector<string>
}

@enduml